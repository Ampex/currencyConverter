{"version":3,"sources":["components/Form.js","components/Historical.js","components/Alert.js","App.js","index.js"],"names":["validate","values","errors","quantity","from","to","MainForm","props","query","URLSearchParams","useLocation","search","q","v","get","f","t","onSubmit","initialValues","toUpperCase","render","handleSubmit","submitting","pristine","noValidate","name","input","type","label","style","marginBottom","inputProps","tabIndex","InputProps","endAdornment","InputAdornment","FormControl","focused","fullWidth","InputLabel","Input","readOnly","required","value","result","className","variant","currList","fontSize","color","Button","size","disabled","CircularProgress","position","sensitive","pathname","isMobile","window","innerWidth","Historical","rows","entries","map","row","index","Fade","key","timeout","in","TableRow","hover","TableCell","component","scope","time","align","after","Grid","container","alignItems","direction","justify","item","xs","Box","TableContainer","height","Table","stickyHeader","TableHead","TableBody","length","Typography","textDecoration","onClick","clear","Grow","status","IconButton","transform","toogle","ALert","useState","online","setOffline","useEffect","addEventListener","Backdrop","open","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","AlertTitle","App","state","historical","handleOpen","setState","handleClear","localStorage","removeItem","val","a","currs","Date","toLocaleDateString","fetch","then","resp","json","data","toFixed","setItem","JSON","stringify","process","results","currenciesJSON","getItem","this","parse","currSelectList","Object","keys","sort","curr","MenuItem","width","Form","path","Component","theme","createMuiTheme","overrides","MuiBackdrop","root","zIndex","MuiSvgIcon","fontSizeLarge","MuiTableCell","backgroundColor","fontWeight","body","palette","primary","main","secondary","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.53b1b4f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\nimport {\r\n  InputAdornment,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { TextField, Select } from 'mui-rff'\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz'\r\nimport { useLocation, Redirect } from 'react-router-dom'\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search)\r\n}\r\nconst validate = values => {\r\n  const errors = {}\r\n  if (!values.quantity || values.quantity <= 0) {\r\n    errors.quantity = 'Nieprawidłowa wartość'\r\n  }\r\n  if (!values.from) {\r\n    errors.from = 'Wybierz walutę'\r\n  }\r\n  if (!values.to) {\r\n    errors.to = 'Wybierz walutę'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst MainForm = props => {\r\n  const query = useQuery()\r\n  const q = {\r\n    v: query.get('value'),\r\n    f: query.get('from'),\r\n    t: query.get('to')\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={props.onSubmit}\r\n      initialValues={{\r\n        quantity: q.v || '',\r\n        from: (q.f && q.f.toUpperCase()) || '',\r\n        to: (q.t && q.t.toUpperCase()) || ''\r\n      }}\r\n      validate={validate}\r\n      render={({ handleSubmit, submitting, pristine, values }) => (\r\n        <form onSubmit={handleSubmit} noValidate>\r\n          <Field name='quantity'>\r\n            {({ input }) => (\r\n              <TextField\r\n                {...input}\r\n                type='number'\r\n                label='Wpisz kwotę'\r\n                name='quantity'\r\n                style={{ marginBottom: 25 }}\r\n                inputProps={{\r\n                  tabIndex: 1\r\n                }}\r\n                InputProps={{\r\n                  endAdornment: values.from && (\r\n                    <InputAdornment>{values.from}</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            )}\r\n          </Field>\r\n          <FormControl focused={false} fullWidth>\r\n            <InputLabel>Wynik</InputLabel>\r\n            <Input\r\n              readOnly\r\n              type='number'\r\n              name='converted'\r\n              required\r\n              value={props.result || ''}\r\n              inputProps={{\r\n                tabIndex: -1\r\n              }}\r\n              endAdornment={\r\n                values.to && <InputAdornment>{values.to}</InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n          <div className='selects'>\r\n            <Field name='from'>\r\n              {({ input }) => (\r\n                <Select\r\n                  {...input}\r\n                  label='Konwertuj z'\r\n                  variant='outlined'\r\n                  name='from'\r\n                  inputProps={{\r\n                    tabIndex: 2\r\n                  }}\r\n                >\r\n                  {props.currList}\r\n                </Select>\r\n              )}\r\n            </Field>\r\n            <SwapHorizIcon fontSize='large' color='primary' />\r\n            <Field name='to'>\r\n              {({ input }) => (\r\n                <Select\r\n                  {...input}\r\n                  label='Konwertuj na'\r\n                  variant='outlined'\r\n                  name='to'\r\n                  inputProps={{\r\n                    tabIndex: 3\r\n                  }}\r\n                >\r\n                  {props.currList}\r\n                </Select>\r\n              )}\r\n            </Field>\r\n          </div>\r\n\r\n          <Button\r\n            fullWidth\r\n            size='large'\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            disabled={submitting}\r\n          >\r\n            {submitting && (\r\n              <CircularProgress\r\n                color='primary'\r\n                size={30}\r\n                style={{ position: 'absolute' }}\r\n              />\r\n            )}\r\n            Konwertuj\r\n          </Button>\r\n          <Redirect\r\n            sensitive\r\n            to={{\r\n              pathname: '/currencyConverter/',\r\n              search: `${values.quantity && `${`?value=${values.quantity}`}`}${\r\n                values.from && `${`&from=${values.from}`}`\r\n              }${values.to && `${`&to=${values.to}`}`}`\r\n            }}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MainForm\r\n","import React from 'react'\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Fade,\r\n  Button,\r\n  IconButton,\r\n  Grow\r\n} from '@material-ui/core'\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\r\n\r\nconst isMobile = window.innerWidth <= 1200\r\n\r\nconst Historical = props => {\r\n  const rows =\r\n    props.entries &&\r\n    props.entries.map((row, index) => (\r\n      <Fade key={index} timeout={200} in>\r\n        <TableRow hover>\r\n          <TableCell component='th' scope='row'>\r\n            {row.time}\r\n          </TableCell>\r\n          <TableCell align='right'>\r\n            {row.value} {row.from}\r\n          </TableCell>\r\n          <TableCell align='center'>\r\n            <ArrowRightAltIcon />\r\n          </TableCell>\r\n          <TableCell align='right'>\r\n            {row.after} {row.to}\r\n          </TableCell>\r\n        </TableRow>\r\n      </Fade>\r\n    ))\r\n\r\n  return (\r\n    <Grid container alignItems='flex-start'>\r\n      <Grid container direction='column' justify='space-around' item xs={10}>\r\n        <Box>\r\n          <TableContainer style={{ height: '490px' }}>\r\n            <Table stickyHeader>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Data</TableCell>\r\n                  <TableCell align='right'>Przed konwersją</TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell align='right'>Po konwersji</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{rows}</TableBody>\r\n            </Table>\r\n            {!props.entries.length && (\r\n              <Typography style={{ height: '80%' }} className='flex-center'>\r\n                Brak historii konwersji walut\r\n              </Typography>\r\n            )}\r\n          </TableContainer>\r\n        </Box>\r\n        <Box className='reset'>\r\n          <Button\r\n            disabled={!props.entries.length}\r\n            color='secondary'\r\n            style={{ textDecoration: 'underline' }}\r\n            onClick={props.clear}\r\n          >\r\n            Wyczyść historię\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      <Grid container justify='center' item xs={2}>\r\n        <Box className='tab'>\r\n          <Grow in={props.status || props.entries.length !== 0}>\r\n            <IconButton\r\n              style={\r\n                props.status\r\n                  ? {\r\n                      transform: `${\r\n                        isMobile ? 'rotate(270deg)' : 'rotate(180deg)'\r\n                      }`\r\n                    }\r\n                  : {\r\n                      transform: `${\r\n                        isMobile ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                      }`\r\n                    }\r\n              }\r\n              onClick={props.toogle}\r\n              color='secondary'\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </IconButton>\r\n          </Grow>\r\n          <Typography\r\n            style={props.status ? { color: 'inherit' } : { color: '#adc8f5' }}\r\n            variant='h6'\r\n          >\r\n            Historia\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Historical\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { Snackbar, Backdrop } from '@material-ui/core'\r\n\r\nconst ALert = () => {\r\n  const [online, setOffline] = useState(true)\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('online', () => setOffline(true))\r\n    window.addEventListener('offline', () => setOffline(false))\r\n  })\r\n\r\n  return (\r\n    <Backdrop open={!online}>\r\n      <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} open>\r\n        <Alert severity='error'>\r\n          <AlertTitle>\r\n            <strong>Jesteś offline</strong>\r\n          </AlertTitle>\r\n          Utracono połączenie z serwerem. Sprawdź swoją sieć.\r\n        </Alert>\r\n      </Snackbar>\r\n    </Backdrop>\r\n  )\r\n}\r\n\r\nexport default ALert\r\n","import React, { Component } from 'react'\nimport './App.scss'\nimport { MenuItem } from '@material-ui/core'\nimport Form from './components/Form'\nimport Historical from './components/Historical'\nimport Alert from './components/Alert'\nimport currenciesJSON from './currencies.json'\nimport { Route } from 'react-router-dom'\n\nconst isMobile = window.innerWidth <= 1200\n\nclass App extends Component {\n  state = {\n    currList: [],\n    historical: [],\n    result: false,\n    open: false\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://free.currconv.com/api/v7/currencies?apiKey=${process.env.REACT_APP_API_KEY}`\n    )\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          currList: data.results || currenciesJSON.results\n        })\n      )\n    localStorage.getItem('history') &&\n      this.setState({\n        historical: JSON.parse(localStorage.getItem('history')) || []\n      })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n  handleClear = () => {\n    localStorage.removeItem('history')\n    this.setState({ historical: [] })\n  }\n\n  handleSubmit = async val => {\n    const currs = `${val.from}_${val.to}`\n    const time = new Date().toLocaleDateString()\n    await fetch(\n      `https://free.currconv.com/api/v7/convert?apiKey=7c75ab8096c89ac26891&q=${currs}&compact=ultra`\n    )\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          historical: [\n            {\n              time,\n              after: (data[currs] * val.quantity).toFixed(2),\n              value: val.quantity,\n              from: val.from,\n              to: val.to\n            },\n            ...this.state.historical\n          ],\n          open: true,\n          result: (data[currs] * val.quantity).toFixed(2)\n        })\n      )\n    localStorage.setItem('history', JSON.stringify(this.state.historical))\n  }\n\n  render() {\n    const { currList, historical, open, result } = this.state\n    const currSelectList =\n      currList &&\n      Object.keys(currList)\n        .sort()\n        .map(curr => (\n          <MenuItem key={curr} value={curr}>\n            {curr}\n          </MenuItem>\n        ))\n\n    return (\n      <div className='container'>\n        <Alert />\n\n        <div\n          style={open && !isMobile ? { width: '1150px' } : { width: '600px' }}\n          className='wrapper'\n        >\n          <main>\n            <h3>Konwerter walut</h3>\n            <Form\n              onSubmit={this.handleSubmit}\n              currList={currSelectList}\n              handleOpen={this.handleOpen}\n              result={result}\n            />\n          </main>\n          <div\n            style={\n              open\n                ? {\n                    transform: `${\n                      isMobile ? 'translate(70px, 570px)' : 'translate(560px)'\n                    }`\n                  }\n                : { transform: 'translate(70px)' }\n            }\n            className='historical'\n          >\n            <Historical\n              clear={this.handleClear}\n              status={open}\n              toogle={this.handleOpen}\n              entries={historical}\n            />\n            <Route path='/user/:username' component={Form} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        zIndex: 2\n      }\n    },\n    MuiSvgIcon: {\n      fontSizeLarge: {\n        width: '80px'\n      }\n    },\n    MuiTableCell: {\n      stickyHeader: {\n        backgroundColor: '#3578eb',\n        color: '#ffffff',\n        fontWeight: 700\n      },\n      body: {\n        color: '#ffffff'\n      }\n    }\n  },\n  palette: {\n    primary: {\n      main: '#3578eb'\n    },\n    secondary: {\n      main: '#ffffff'\n    }\n  }\n})\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Router>\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}